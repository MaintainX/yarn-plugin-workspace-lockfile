/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-workspace-lockfile",
factory: function (require) {
"use strict";var plugin=(()=>{var b=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var I=(n=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(n,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):n)(function(n){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+n+'" is not supported')});var v=(n,t)=>{for(var r in t)b(n,r,{get:t[r],enumerable:!0})},U=(n,t,r,u)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of E(t))!P.call(n,a)&&a!==r&&b(n,a,{get:()=>t[a],enumerable:!(u=S(t,a))||u.enumerable});return n};var R=n=>U(b({},"__esModule",{value:!0}),n);var F={};v(F,{default:()=>q});var e=I("@yarnpkg/core"),y=I("@yarnpkg/fslib");function V(n,t,r){let u=e.structUtils.makeDescriptor(e.structUtils.parseIdent(t),r.startsWith("npm:")?r:`npm:${r}`);return n.storedResolutions.has(u.descriptorHash)}async function k(n,t,r){let u=n.manifest.raw.name||n.cwd;r.reportInfo(e.MessageName.UNNAMED,`Generating lockfile for ${u}...`);try{let a=new Set,$=n.manifest;for(let d of["dependencies","devDependencies","peerDependencies"]){let i=$.getForScope(d);t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`Found ${i.size} ${d}`);for(let o of i.values()){let l=t.workspaces.find(f=>f.manifest.raw.name===o.name||f.manifest.raw.name===`@${o.scope}/${o.name}`);if(l){let f=e.structUtils.makeDescriptor(e.structUtils.makeIdent(o.scope||"",o.name),o.range);a.add(f),t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`Added workspace dependency: ${e.structUtils.stringifyDescriptor(f)}`);for(let g of["dependencies","devDependencies","peerDependencies"]){let c=l.manifest.getForScope(g);for(let p of c.values()){let s=e.structUtils.makeDescriptor(e.structUtils.makeIdent(p.scope||"npm",p.name),p.range);a.add(s),t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`Added transitive dependency from workspace: ${e.structUtils.stringifyDescriptor(s)}`)}}}else{let f=o.scope?`@${o.scope}/${o.name}`:o.name,g=e.structUtils.parseIdent(f),c=o.range.startsWith("workspace:")||o.range.startsWith("npm:")?o.range:`npm:${o.range}`,p=e.structUtils.makeDescriptor(g,c);a.add(p),t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`Added dependency: ${e.structUtils.stringifyDescriptor(p)}`)}}}let N=new Map,W=new Set,D=new Map,M=d=>{let i=e.structUtils.parseDescriptor(d);return i.range.startsWith("workspace:")?e.structUtils.stringifyDescriptor(i):e.structUtils.stringifyDescriptor(e.structUtils.makeDescriptor(i,`npm:${i.range.replace(/^npm:/,"")}`))},h=d=>{let i=e.structUtils.stringifyDescriptor(d),o=M(i);if(W.has(o))return;W.add(o);let l=t.storedResolutions.get(d.descriptorHash);if(!l){t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`No resolution found for ${i}`);return}D.has(l)||D.set(l,new Set),D.get(l).add(d);let f=t.storedPackages.get(l);if(!f){t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`No package found for ${i}`);return}for(let[g,c]of f.dependencies)h(c);for(let[g,c]of f.peerDependencies)h(c)};for(let d of a)h(d);for(let[d,i]of D){let o=t.storedPackages.get(d);if(!o)continue;let l=Array.from(i).map(p=>e.structUtils.stringifyDescriptor(p)).filter(p=>!p.includes("virtual:")).sort();if(l.length===0)continue;let f=l.join(", "),g=new Map,c=new Map;for(let[p,s]of o.dependencies){let m=s.range.startsWith("virtual:")?`npm:${s.range.replace(/^virtual:[^#]+#npm:/,"")}`:s.range.startsWith("workspace:")||s.range.startsWith("npm:")?s.range:`npm:${s.range}`;g.set(e.structUtils.stringifyIdent(s),m)}for(let[p,s]of o.peerDependencies){let m=e.structUtils.stringifyIdent(s),w=s.range.startsWith("virtual:")?`npm:${s.range.replace(/^virtual:[^#]+#npm:/,"")}`:s.range.startsWith("workspace:")||s.range.startsWith("npm:")?s.range:`npm:${s.range}`;if(m.startsWith("@types/")&&!V(t,m,w)){t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`Skipping @types peer dependency not in main lockfile: ${m}@${w}`);continue}c.set(m,w)}N.set(f,{version:o.version,resolution:e.structUtils.stringifyLocator(o),checksum:o.identHash,dependencies:g,peerDependencies:c})}t.configuration.get("enableVerboseLogging")&&r.reportInfo(e.MessageName.UNNAMED,`Generated ${N.size} entries for workspace lockfile`);let L=Array.from(N.entries()).sort().map(([d,i])=>{let o=i.dependencies.size>0?`  dependencies:
${Array.from(i.dependencies.entries()).sort().map(([g,c])=>{let p=c.startsWith("workspace:")?c:`npm:${c.replace(/^npm:/,"")}`;return`    ${g.startsWith("@")?`"${g}"`:g}: "${p}"`}).join(`
`)}`:"",l=i.peerDependencies.size>0?`  peerDependencies:
${Array.from(i.peerDependencies.entries()).sort().map(([g,c])=>{let p=c.startsWith("workspace:")?c:`${c.replace(/^npm:/,"")}`,s=p.match(/[:\{\}\[\]\,&*#?<>=!%@\\]/)?`"${p}"`:p;return`    ${g.startsWith("@")?`"${g}"`:g}: ${s}`}).join(`
`)}`:"";return[`"${d}":`,`  version: ${i.version||"unknown"}`,`  resolution: "${i.resolution}"`,o,l].filter(Boolean).join(`
`)+`
`}).join(`
`),A=y.ppath.join(n.cwd,"yarn.workspace.lock");await y.xfs.writeFilePromise(A,L),r.reportInfo(e.MessageName.UNNAMED,`Created ${A}`)}catch(a){let $=a instanceof Error?a.message:String(a);r.reportError(e.MessageName.UNNAMED,`Failed to generate lockfile for ${u}: ${$}`)}}var z={configuration:{enableVerboseLogging:{description:"If true, enables verbose logging for workspace lockfile generation",type:e.SettingsType.BOOLEAN,default:!1}},hooks:{async afterAllInstalled(n,t){for(let r of n.workspaces)await k(r,n,t.report)},async afterWorkspaceDependencyAddition(n,t,r,u){await e.StreamReport.start({configuration:n.project.configuration,stdout:process.stdout},async a=>{await k(n,n.project,a)})},async afterWorkspaceDependencyRemoval(n,t,r){await e.StreamReport.start({configuration:n.project.configuration,stdout:process.stdout},async u=>{await k(n,n.project,u)})},async afterWorkspaceDependencyReplacement(n,t,r,u){await e.StreamReport.start({configuration:n.project.configuration,stdout:process.stdout},async a=>{await k(n,n.project,a)})}}},q=z;return R(F);})();
return plugin;
}
};
