/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-workspace-lockfile",
factory: function (require) {
"use strict";var plugin=(()=>{var F=Object.create;var P=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var Q=Object.getPrototypeOf,Y=Object.prototype.hasOwnProperty;var w=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(n,s)=>(typeof require<"u"?require:n)[s]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var h=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),q=(e,n)=>{for(var s in n)P(e,s,{get:n[s],enumerable:!0})},B=(e,n,s,i)=>{if(n&&typeof n=="object"||typeof n=="function")for(let I of K(n))!Y.call(e,I)&&I!==s&&P(e,I,{get:()=>n[I],enumerable:!(i=H(n,I))||i.enumerable});return e};var z=(e,n,s)=>(s=e!=null?F(Q(e)):{},B(n||!e||!e.__esModule?P(s,"default",{value:e,enumerable:!0}):s,e)),X=e=>B(P({},"__esModule",{value:!0}),e);var M=h((oe,x)=>{x.exports=[{name:"Agola CI",constant:"AGOLA",env:"AGOLA_GIT_REF",pr:"AGOLA_PULL_REQUEST_ID"},{name:"Appcircle",constant:"APPCIRCLE",env:"AC_APPCIRCLE",pr:{env:"AC_GIT_PR",ne:"false"}},{name:"AppVeyor",constant:"APPVEYOR",env:"APPVEYOR",pr:"APPVEYOR_PULL_REQUEST_NUMBER"},{name:"AWS CodeBuild",constant:"CODEBUILD",env:"CODEBUILD_BUILD_ARN",pr:{env:"CODEBUILD_WEBHOOK_EVENT",any:["PULL_REQUEST_CREATED","PULL_REQUEST_UPDATED","PULL_REQUEST_REOPENED"]}},{name:"Azure Pipelines",constant:"AZURE_PIPELINES",env:"TF_BUILD",pr:{BUILD_REASON:"PullRequest"}},{name:"Bamboo",constant:"BAMBOO",env:"bamboo_planKey"},{name:"Bitbucket Pipelines",constant:"BITBUCKET",env:"BITBUCKET_COMMIT",pr:"BITBUCKET_PR_ID"},{name:"Bitrise",constant:"BITRISE",env:"BITRISE_IO",pr:"BITRISE_PULL_REQUEST"},{name:"Buddy",constant:"BUDDY",env:"BUDDY_WORKSPACE_ID",pr:"BUDDY_EXECUTION_PULL_REQUEST_ID"},{name:"Buildkite",constant:"BUILDKITE",env:"BUILDKITE",pr:{env:"BUILDKITE_PULL_REQUEST",ne:"false"}},{name:"CircleCI",constant:"CIRCLE",env:"CIRCLECI",pr:"CIRCLE_PULL_REQUEST"},{name:"Cirrus CI",constant:"CIRRUS",env:"CIRRUS_CI",pr:"CIRRUS_PR"},{name:"Cloudflare Pages",constant:"CLOUDFLARE_PAGES",env:"CF_PAGES"},{name:"Codefresh",constant:"CODEFRESH",env:"CF_BUILD_ID",pr:{any:["CF_PULL_REQUEST_NUMBER","CF_PULL_REQUEST_ID"]}},{name:"Codemagic",constant:"CODEMAGIC",env:"CM_BUILD_ID",pr:"CM_PULL_REQUEST"},{name:"Codeship",constant:"CODESHIP",env:{CI_NAME:"codeship"}},{name:"Drone",constant:"DRONE",env:"DRONE",pr:{DRONE_BUILD_EVENT:"pull_request"}},{name:"dsari",constant:"DSARI",env:"DSARI"},{name:"Earthly",constant:"EARTHLY",env:"EARTHLY_CI"},{name:"Expo Application Services",constant:"EAS",env:"EAS_BUILD"},{name:"Gerrit",constant:"GERRIT",env:"GERRIT_PROJECT"},{name:"Gitea Actions",constant:"GITEA_ACTIONS",env:"GITEA_ACTIONS"},{name:"GitHub Actions",constant:"GITHUB_ACTIONS",env:"GITHUB_ACTIONS",pr:{GITHUB_EVENT_NAME:"pull_request"}},{name:"GitLab CI",constant:"GITLAB",env:"GITLAB_CI",pr:"CI_MERGE_REQUEST_ID"},{name:"GoCD",constant:"GOCD",env:"GO_PIPELINE_LABEL"},{name:"Google Cloud Build",constant:"GOOGLE_CLOUD_BUILD",env:"BUILDER_OUTPUT"},{name:"Harness CI",constant:"HARNESS",env:"HARNESS_BUILD_ID"},{name:"Heroku",constant:"HEROKU",env:{env:"NODE",includes:"/app/.heroku/node/bin/node"}},{name:"Hudson",constant:"HUDSON",env:"HUDSON_URL"},{name:"Jenkins",constant:"JENKINS",env:["JENKINS_URL","BUILD_ID"],pr:{any:["ghprbPullId","CHANGE_ID"]}},{name:"LayerCI",constant:"LAYERCI",env:"LAYERCI",pr:"LAYERCI_PULL_REQUEST"},{name:"Magnum CI",constant:"MAGNUM",env:"MAGNUM"},{name:"Netlify CI",constant:"NETLIFY",env:"NETLIFY",pr:{env:"PULL_REQUEST",ne:"false"}},{name:"Nevercode",constant:"NEVERCODE",env:"NEVERCODE",pr:{env:"NEVERCODE_PULL_REQUEST",ne:"false"}},{name:"Prow",constant:"PROW",env:"PROW_JOB_ID"},{name:"ReleaseHub",constant:"RELEASEHUB",env:"RELEASE_BUILD_ID"},{name:"Render",constant:"RENDER",env:"RENDER",pr:{IS_PULL_REQUEST:"true"}},{name:"Sail CI",constant:"SAIL",env:"SAILCI",pr:"SAIL_PULL_REQUEST_NUMBER"},{name:"Screwdriver",constant:"SCREWDRIVER",env:"SCREWDRIVER",pr:{env:"SD_PULL_REQUEST",ne:"false"}},{name:"Semaphore",constant:"SEMAPHORE",env:"SEMAPHORE",pr:"PULL_REQUEST_NUMBER"},{name:"Sourcehut",constant:"SOURCEHUT",env:{CI_NAME:"sourcehut"}},{name:"Strider CD",constant:"STRIDER",env:"STRIDER"},{name:"TaskCluster",constant:"TASKCLUSTER",env:["TASK_ID","RUN_ID"]},{name:"TeamCity",constant:"TEAMCITY",env:"TEAMCITY_VERSION"},{name:"Travis CI",constant:"TRAVIS",env:"TRAVIS",pr:{env:"TRAVIS_PULL_REQUEST",ne:"false"}},{name:"Vela",constant:"VELA",env:"VELA",pr:{VELA_PULL_REQUEST:"1"}},{name:"Vercel",constant:"VERCEL",env:{any:["NOW_BUILDER","VERCEL"]},pr:"VERCEL_GIT_PULL_REQUEST_ID"},{name:"Visual Studio App Center",constant:"APPCENTER",env:"APPCENTER_BUILD_ID"},{name:"Woodpecker",constant:"WOODPECKER",env:{CI:"woodpecker"},pr:{CI_BUILD_EVENT:"pull_request"}},{name:"Xcode Cloud",constant:"XCODE_CLOUD",env:"CI_XCODE_PROJECT",pr:"CI_PULL_REQUEST_NUMBER"},{name:"Xcode Server",constant:"XCODE_SERVER",env:"XCS"}]});var b=h(_=>{"use strict";var W=M(),p=process.env;Object.defineProperty(_,"_vendors",{value:W.map(function(e){return e.constant})});_.name=null;_.isPR=null;_.id=null;W.forEach(function(e){let s=(Array.isArray(e.env)?e.env:[e.env]).every(function(i){return $(i)});_[e.constant]=s,s&&(_.name=e.name,_.isPR=J(e),_.id=e.constant)});_.isCI=!!(p.CI!=="false"&&(p.BUILD_ID||p.BUILD_NUMBER||p.CI||p.CI_APP_ID||p.CI_BUILD_ID||p.CI_BUILD_NUMBER||p.CI_NAME||p.CONTINUOUS_INTEGRATION||p.RUN_ID||_.name));function $(e){return typeof e=="string"?!!p[e]:"env"in e?p[e.env]&&p[e.env].includes(e.includes):"any"in e?e.any.some(function(n){return!!p[n]}):Object.keys(e).every(function(n){return p[n]===e[n]})}function J(e){switch(typeof e.pr){case"string":return!!p[e.pr];case"object":return"env"in e.pr?"any"in e.pr?e.pr.any.some(function(n){return p[e.pr.env]===n}):e.pr.env in p&&p[e.pr.env]!==e.pr.ne:"any"in e.pr?e.pr.any.some(function(n){return!!p[n]}):$(e.pr);default:return null}}});var se={};q(se,{default:()=>ne});var t=w("@yarnpkg/core"),k=w("@yarnpkg/fslib"),V=z(b());async function Z(e,n,s,{report:i,immutable:I,cache:y,persistProject:A}){try{let m=new Set,U=n.manifest;for(let u of["dependencies","devDependencies","peerDependencies"]){let c=U.getForScope(u);s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`Found ${c.size} ${u}`);for(let r of c.values()){let g=s.workspaces.find(d=>d.manifest.raw.name===r.name||d.manifest.raw.name===`@${r.scope}/${r.name}`);if(g){let d=t.structUtils.makeDescriptor(t.structUtils.makeIdent(r.scope||"",r.name),r.range);m.add(d),s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`Added workspace dependency: ${t.structUtils.stringifyDescriptor(d)}`);for(let l of["dependencies","devDependencies","peerDependencies"]){let E=g.manifest.getForScope(l);for(let f of E.values()){let o=t.structUtils.makeDescriptor(t.structUtils.makeIdent(f.scope||"npm",f.name),f.range);m.add(o),s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`Added transitive dependency from workspace: ${t.structUtils.stringifyDescriptor(o)}`)}}}else{let d=r.scope?`@${r.scope}/${r.name}`:r.name,l=t.structUtils.parseIdent(d),f=r.range.match(/^([a-z]+):/)?.[1]?r.range:`npm:${r.range}`,o=t.structUtils.makeDescriptor(l,f);m.add(o),s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`Added dependency: ${t.structUtils.stringifyDescriptor(o)}`)}}}let L=new Map,S=new Set,a=new Map,D=u=>{let c=t.structUtils.parseDescriptor(u);return c.range.startsWith("workspace:")?t.structUtils.stringifyDescriptor(c):t.structUtils.stringifyDescriptor(t.structUtils.makeDescriptor(c,`npm:${c.range.replace(/^npm:/,"")}`))},C=u=>{let c=t.structUtils.stringifyDescriptor(u),r=D(c);if(S.has(r))return;let g=s.storedResolutions.get(u.descriptorHash);if(!g){s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`No resolution found for ${c}`);return}a.has(g)||a.set(g,new Set),a.get(g).add(u);let d=s.storedPackages.get(g);if(!d){s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`No package found for ${c}`);return}S.add(r);for(let[l,E]of d.dependencies)C(E);for(let[l,E]of d.peerDependencies)C(E)};for(let u of m)C(u);for(let[u,c]of a){let r=s.storedPackages.get(u);if(!r)continue;let g=Array.from(c).map(f=>t.structUtils.stringifyDescriptor(f)).filter(f=>!f.includes("virtual:")).sort();if(g.length===0)continue;let d=g.join(", "),l=new Map,E=new Map;for(let[f,o]of r.dependencies){let R=o.range.startsWith("virtual:")?`npm:${o.range.replace(/^virtual:[^#]+#npm:/,"")}`:o.range.startsWith("workspace:")||o.range.startsWith("npm:")?o.range:`npm:${o.range}`;l.set(t.structUtils.stringifyIdent(o),R)}for(let[f,o]of r.peerDependencies){let R=t.structUtils.stringifyIdent(o),O=o.range.startsWith("virtual:")?`npm:${o.range.replace(/^virtual:[^#]+#npm:/,"")}`:o.range.startsWith("workspace:")||o.range.startsWith("npm:")?o.range:`npm:${o.range}`;if(R.startsWith("@types/")&&r.peerDependenciesMeta.get(R)?.optional&&o.range==="*"){s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`Skipping optional @types peer dependency: ${R}@${O}`);continue}E.set(R,O)}L.set(d,{version:r.linkType===t.LinkType.SOFT&&r.reference.startsWith("workspace:")?"0.0.0-use.local":r.version,resolution:t.structUtils.stringifyLocator(r),dependencies:l,peerDependencies:E,bin:r.bin,checksum:s.storedChecksums.get(u)||"",languageName:r.languageName,linkType:r.linkType})}s.configuration.get("enableVerboseLogging")&&i.reportInfo(t.MessageName.UNNAMED,`Generated ${L.size} entries for workspace lockfile`);let T=Array.from(L.entries()).sort().map(([u,c])=>{let r=c.dependencies.size>0?`  dependencies:
${Array.from(c.dependencies.entries()).sort().map(([l,E])=>{let f=E.startsWith("workspace:")?E:`npm:${E.replace(/^npm:/,"")}`;return`    ${l.startsWith("@")?`"${l}"`:l}: "${f}"`}).join(`
`)}`:"",g=c.peerDependencies.size>0?`  peerDependencies:
${Array.from(c.peerDependencies.entries()).sort().map(([l,E])=>{let f=E.startsWith("workspace:")?E:`${E.replace(/^npm:/,"")}`,o=f.match(/[:\{\}\[\]\,&*#?<>=!%@\\]/)?`"${f}"`:f;return`    ${l.startsWith("@")?`"${l}"`:l}: ${o}`}).join(`
`)}`:"";return[`"${u}":`,`  version: ${c.version||"unknown"}`,`  resolution: "${c.resolution}"`,r,g,c.bin.size>0?`  bin:
${Array.from(c.bin.entries()).map(([l,E])=>`    ${l}: ${E}`).join(`
`)}`:"",`  checksum: ${c.checksum}`,`  languageName: ${c.languageName.toLowerCase()}`,`  linkType: ${c.linkType.toLowerCase()}`].filter(Boolean).join(`
`)+`
`}).join(`
`),G=y.cacheKey,v=`# This file is generated by running "yarn install" inside your project through the workspace-lockfile plugin.
# Manual changes might be lost - proceed with caution!

__metadata:
  version: ${s.lockfileLastVersion??"6"}
  cacheKey: ${G}

${T}`,N=k.ppath.join(n.cwd,"yarn.workspace.lock");if(process.env.WORKSPACE_LOCKFILE_FORCE_WRITE!=="true"&&I){if(await k.xfs.readFilePromise(N,"utf-8")===v)return;i.reportError(t.MessageName.UNNAMED,`The lockfile ${N} would have been modified by this install, which is explicitly forbidden`)}else await k.xfs.writeFilePromise(N,v),i.reportInfo(t.MessageName.UNNAMED,`Created ${N}`)}catch(m){let U=m instanceof Error?m.message:String(m);i.reportError(t.MessageName.UNNAMED,`Failed to generate lockfile for ${e}: ${U}`)}}function j(e,n){if(n.persistProject!==!1)return{isWorkspaceFocused:!1};let s=process.argv.slice(2),i=s[0]==="workspaces"&&s[1]==="focus",I=i&&s.some(a=>a==="--production"),y=i&&s.some(a=>a==="--all"||a==="-A");if(!i)return{isWorkspaceFocused:!1};if(y)return{isWorkspaceFocused:!0,isProduction:I,workspaces:e.workspaces};let A=s.slice(2).filter(a=>!a.startsWith("-"));if(A.length===0){let a=k.ppath.cwd(),D=e.workspacesByCwd.get(a);if(!D)throw new Error(`No workspace found in ${a}, please specify a workspace or use --all or -A`);A.push(D.manifest.raw.name)}let m=new Map(e.workspaces.map(a=>[a.manifest.raw.name,a])),U=new Set(A),L=new Set;function S(a){if(!L.has(a)){L.add(a),U.add(a.manifest.raw.name);for(let[D,C]of new Map([...a.manifest.getForScope("dependencies").entries(),...a.manifest.getForScope("devDependencies").entries()]))if(C.range.startsWith("workspace:")){let T=m.get(C.name);T&&S(T)}}}for(let a of U){let D=m.get(a);if(D)S(D);else throw new Error(`Workspace ${a} not found in the project`)}return{isWorkspaceFocused:i,isProduction:I,workspaces:Array.from(L)}}var ee={configuration:{enableVerboseLogging:{description:"If true, enables verbose logging for workspace lockfile generation",type:t.SettingsType.BOOLEAN,default:!1}},hooks:{async afterAllInstalled(e,n){if(n.persistProject===!1)return;let s=j(e,n);s.isWorkspaceFocused&&(s.isProduction||!s.workspaces?.length)||(s.isWorkspaceFocused&&V.isCI&&(n.immutable=!0),await n.report.startTimerPromise("Workspace lockfiles step",async()=>{for(let i of s.workspaces??e.workspaces){let I=i.manifest.raw.name||i.cwd;await n.report.startTimerPromise(`Generating lockfile for ${I}`,async()=>{await Z(I,i,e,n)})}}))}}},ne=ee;return X(se);})();
return plugin;
}
};
