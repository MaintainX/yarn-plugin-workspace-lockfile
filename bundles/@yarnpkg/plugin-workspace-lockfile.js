/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-workspace-lockfile",
factory: function (require) {
"use strict";var plugin=(()=>{var h=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var M=(n=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(n,{get:(r,s)=>(typeof require<"u"?require:r)[s]}):n)(function(n){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+n+'" is not supported')});var U=(n,r)=>{for(var s in r)h(n,s,{get:r[s],enumerable:!0})},P=(n,r,s,u)=>{if(r&&typeof r=="object"||typeof r=="function")for(let a of E(r))!v.call(n,a)&&a!==s&&h(n,a,{get:()=>r[a],enumerable:!(u=S(r,a))||u.enumerable});return n};var V=n=>P(h({},"__esModule",{value:!0}),n);var q={};U(q,{default:()=>z});var e=M("@yarnpkg/core"),y=M("@yarnpkg/fslib");async function k(n,r,s){let u=n.manifest.raw.name||n.cwd;s.reportInfo(e.MessageName.UNNAMED,`Generating lockfile for ${u}...`);try{let a=new Set,$=n.manifest;for(let d of["dependencies","devDependencies","peerDependencies"]){let i=$.getForScope(d);r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`Found ${i.size} ${d}`);for(let t of i.values()){let l=r.workspaces.find(f=>f.manifest.raw.name===t.name||f.manifest.raw.name===`@${t.scope}/${t.name}`);if(l){let f=e.structUtils.makeDescriptor(e.structUtils.makeIdent(t.scope||"",t.name),t.range);a.add(f),r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`Added workspace dependency: ${e.structUtils.stringifyDescriptor(f)}`);for(let g of["dependencies","devDependencies","peerDependencies"]){let c=l.manifest.getForScope(g);for(let p of c.values()){let o=e.structUtils.makeDescriptor(e.structUtils.makeIdent(p.scope||"npm",p.name),p.range);a.add(o),r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`Added transitive dependency from workspace: ${e.structUtils.stringifyDescriptor(o)}`)}}}else{let f=t.scope?`@${t.scope}/${t.name}`:t.name,g=e.structUtils.parseIdent(f),c=t.range.startsWith("workspace:")||t.range.startsWith("npm:")?t.range:`npm:${t.range}`,p=e.structUtils.makeDescriptor(g,c);a.add(p),r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`Added dependency: ${e.structUtils.stringifyDescriptor(p)}`)}}}let N=new Map,b=new Set,D=new Map,I=d=>{let i=e.structUtils.parseDescriptor(d);return i.range.startsWith("workspace:")?e.structUtils.stringifyDescriptor(i):e.structUtils.stringifyDescriptor(e.structUtils.makeDescriptor(i,`npm:${i.range.replace(/^npm:/,"")}`))},w=d=>{let i=e.structUtils.stringifyDescriptor(d),t=I(i);if(b.has(t))return;let l=r.storedResolutions.get(d.descriptorHash);if(!l){r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`No resolution found for ${i}`);return}D.has(l)||D.set(l,new Set),D.get(l).add(d);let f=r.storedPackages.get(l);if(!f){r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`No package found for ${i}`);return}b.add(t);for(let[g,c]of f.dependencies)w(c);for(let[g,c]of f.peerDependencies)w(c)};for(let d of a)w(d);for(let[d,i]of D){let t=r.storedPackages.get(d);if(!t)continue;let l=Array.from(i).map(p=>e.structUtils.stringifyDescriptor(p)).filter(p=>!p.includes("virtual:")).sort();if(l.length===0)continue;let f=l.join(", "),g=new Map,c=new Map;for(let[p,o]of t.dependencies){let m=o.range.startsWith("virtual:")?`npm:${o.range.replace(/^virtual:[^#]+#npm:/,"")}`:o.range.startsWith("workspace:")||o.range.startsWith("npm:")?o.range:`npm:${o.range}`;g.set(e.structUtils.stringifyIdent(o),m)}for(let[p,o]of t.peerDependencies){let m=e.structUtils.stringifyIdent(o),A=o.range.startsWith("virtual:")?`npm:${o.range.replace(/^virtual:[^#]+#npm:/,"")}`:o.range.startsWith("workspace:")||o.range.startsWith("npm:")?o.range:`npm:${o.range}`;if(m.startsWith("@types/")&&t.peerDependenciesMeta.get(m)?.optional&&o.range==="*"){r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`Skipping optional @types peer dependency: ${m}@${A}`);continue}c.set(m,A)}N.set(f,{version:t.version,resolution:e.structUtils.stringifyLocator(t),dependencies:g,peerDependencies:c})}r.configuration.get("enableVerboseLogging")&&s.reportInfo(e.MessageName.UNNAMED,`Generated ${N.size} entries for workspace lockfile`);let L=Array.from(N.entries()).sort().map(([d,i])=>{let t=i.dependencies.size>0?`  dependencies:
${Array.from(i.dependencies.entries()).sort().map(([g,c])=>{let p=c.startsWith("workspace:")?c:`npm:${c.replace(/^npm:/,"")}`;return`    ${g.startsWith("@")?`"${g}"`:g}: "${p}"`}).join(`
`)}`:"",l=i.peerDependencies.size>0?`  peerDependencies:
${Array.from(i.peerDependencies.entries()).sort().map(([g,c])=>{let p=c.startsWith("workspace:")?c:`${c.replace(/^npm:/,"")}`,o=p.match(/[:\{\}\[\]\,&*#?<>=!%@\\]/)?`"${p}"`:p;return`    ${g.startsWith("@")?`"${g}"`:g}: ${o}`}).join(`
`)}`:"";return[`"${d}":`,`  version: ${i.version||"unknown"}`,`  resolution: "${i.resolution}"`,t,l].filter(Boolean).join(`
`)+`
`}).join(`
`),W=y.ppath.join(n.cwd,"yarn.workspace.lock");await y.xfs.writeFilePromise(W,L),s.reportInfo(e.MessageName.UNNAMED,`Created ${W}`)}catch(a){let $=a instanceof Error?a.message:String(a);s.reportError(e.MessageName.UNNAMED,`Failed to generate lockfile for ${u}: ${$}`)}}var R={configuration:{enableVerboseLogging:{description:"If true, enables verbose logging for workspace lockfile generation",type:e.SettingsType.BOOLEAN,default:!1}},hooks:{async afterAllInstalled(n,r){for(let s of n.workspaces)await k(s,n,r.report)},async afterWorkspaceDependencyAddition(n,r,s,u){await e.StreamReport.start({configuration:n.project.configuration,stdout:process.stdout},async a=>{await k(n,n.project,a)})},async afterWorkspaceDependencyRemoval(n,r,s){await e.StreamReport.start({configuration:n.project.configuration,stdout:process.stdout},async u=>{await k(n,n.project,u)})},async afterWorkspaceDependencyReplacement(n,r,s,u){await e.StreamReport.start({configuration:n.project.configuration,stdout:process.stdout},async a=>{await k(n,n.project,a)})}}},z=R;return V(q);})();
return plugin;
}
};
