/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-workspace-lockfile",
factory: function (require) {
"use strict";var plugin=(()=>{var F=Object.create;var k=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var Q=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,Y=Object.prototype.hasOwnProperty;var O=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(n,t)=>(typeof require<"u"?require:n)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var w=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),q=(e,n)=>{for(var t in n)k(e,t,{get:n[t],enumerable:!0})},h=(e,n,t,i)=>{if(n&&typeof n=="object"||typeof n=="function")for(let g of Q(n))!Y.call(e,g)&&g!==t&&k(e,g,{get:()=>n[g],enumerable:!(i=H(n,g))||i.enumerable});return e};var z=(e,n,t)=>(t=e!=null?F(K(e)):{},h(n||!e||!e.__esModule?k(t,"default",{value:e,enumerable:!0}):t,e)),X=e=>h(k({},"__esModule",{value:!0}),e);var B=w((re,x)=>{x.exports=[{name:"Agola CI",constant:"AGOLA",env:"AGOLA_GIT_REF",pr:"AGOLA_PULL_REQUEST_ID"},{name:"Appcircle",constant:"APPCIRCLE",env:"AC_APPCIRCLE",pr:{env:"AC_GIT_PR",ne:"false"}},{name:"AppVeyor",constant:"APPVEYOR",env:"APPVEYOR",pr:"APPVEYOR_PULL_REQUEST_NUMBER"},{name:"AWS CodeBuild",constant:"CODEBUILD",env:"CODEBUILD_BUILD_ARN",pr:{env:"CODEBUILD_WEBHOOK_EVENT",any:["PULL_REQUEST_CREATED","PULL_REQUEST_UPDATED","PULL_REQUEST_REOPENED"]}},{name:"Azure Pipelines",constant:"AZURE_PIPELINES",env:"TF_BUILD",pr:{BUILD_REASON:"PullRequest"}},{name:"Bamboo",constant:"BAMBOO",env:"bamboo_planKey"},{name:"Bitbucket Pipelines",constant:"BITBUCKET",env:"BITBUCKET_COMMIT",pr:"BITBUCKET_PR_ID"},{name:"Bitrise",constant:"BITRISE",env:"BITRISE_IO",pr:"BITRISE_PULL_REQUEST"},{name:"Buddy",constant:"BUDDY",env:"BUDDY_WORKSPACE_ID",pr:"BUDDY_EXECUTION_PULL_REQUEST_ID"},{name:"Buildkite",constant:"BUILDKITE",env:"BUILDKITE",pr:{env:"BUILDKITE_PULL_REQUEST",ne:"false"}},{name:"CircleCI",constant:"CIRCLE",env:"CIRCLECI",pr:"CIRCLE_PULL_REQUEST"},{name:"Cirrus CI",constant:"CIRRUS",env:"CIRRUS_CI",pr:"CIRRUS_PR"},{name:"Cloudflare Pages",constant:"CLOUDFLARE_PAGES",env:"CF_PAGES"},{name:"Codefresh",constant:"CODEFRESH",env:"CF_BUILD_ID",pr:{any:["CF_PULL_REQUEST_NUMBER","CF_PULL_REQUEST_ID"]}},{name:"Codemagic",constant:"CODEMAGIC",env:"CM_BUILD_ID",pr:"CM_PULL_REQUEST"},{name:"Codeship",constant:"CODESHIP",env:{CI_NAME:"codeship"}},{name:"Drone",constant:"DRONE",env:"DRONE",pr:{DRONE_BUILD_EVENT:"pull_request"}},{name:"dsari",constant:"DSARI",env:"DSARI"},{name:"Earthly",constant:"EARTHLY",env:"EARTHLY_CI"},{name:"Expo Application Services",constant:"EAS",env:"EAS_BUILD"},{name:"Gerrit",constant:"GERRIT",env:"GERRIT_PROJECT"},{name:"Gitea Actions",constant:"GITEA_ACTIONS",env:"GITEA_ACTIONS"},{name:"GitHub Actions",constant:"GITHUB_ACTIONS",env:"GITHUB_ACTIONS",pr:{GITHUB_EVENT_NAME:"pull_request"}},{name:"GitLab CI",constant:"GITLAB",env:"GITLAB_CI",pr:"CI_MERGE_REQUEST_ID"},{name:"GoCD",constant:"GOCD",env:"GO_PIPELINE_LABEL"},{name:"Google Cloud Build",constant:"GOOGLE_CLOUD_BUILD",env:"BUILDER_OUTPUT"},{name:"Harness CI",constant:"HARNESS",env:"HARNESS_BUILD_ID"},{name:"Heroku",constant:"HEROKU",env:{env:"NODE",includes:"/app/.heroku/node/bin/node"}},{name:"Hudson",constant:"HUDSON",env:"HUDSON_URL"},{name:"Jenkins",constant:"JENKINS",env:["JENKINS_URL","BUILD_ID"],pr:{any:["ghprbPullId","CHANGE_ID"]}},{name:"LayerCI",constant:"LAYERCI",env:"LAYERCI",pr:"LAYERCI_PULL_REQUEST"},{name:"Magnum CI",constant:"MAGNUM",env:"MAGNUM"},{name:"Netlify CI",constant:"NETLIFY",env:"NETLIFY",pr:{env:"PULL_REQUEST",ne:"false"}},{name:"Nevercode",constant:"NEVERCODE",env:"NEVERCODE",pr:{env:"NEVERCODE_PULL_REQUEST",ne:"false"}},{name:"Prow",constant:"PROW",env:"PROW_JOB_ID"},{name:"ReleaseHub",constant:"RELEASEHUB",env:"RELEASE_BUILD_ID"},{name:"Render",constant:"RENDER",env:"RENDER",pr:{IS_PULL_REQUEST:"true"}},{name:"Sail CI",constant:"SAIL",env:"SAILCI",pr:"SAIL_PULL_REQUEST_NUMBER"},{name:"Screwdriver",constant:"SCREWDRIVER",env:"SCREWDRIVER",pr:{env:"SD_PULL_REQUEST",ne:"false"}},{name:"Semaphore",constant:"SEMAPHORE",env:"SEMAPHORE",pr:"PULL_REQUEST_NUMBER"},{name:"Sourcehut",constant:"SOURCEHUT",env:{CI_NAME:"sourcehut"}},{name:"Strider CD",constant:"STRIDER",env:"STRIDER"},{name:"TaskCluster",constant:"TASKCLUSTER",env:["TASK_ID","RUN_ID"]},{name:"TeamCity",constant:"TEAMCITY",env:"TEAMCITY_VERSION"},{name:"Travis CI",constant:"TRAVIS",env:"TRAVIS",pr:{env:"TRAVIS_PULL_REQUEST",ne:"false"}},{name:"Vela",constant:"VELA",env:"VELA",pr:{VELA_PULL_REQUEST:"1"}},{name:"Vercel",constant:"VERCEL",env:{any:["NOW_BUILDER","VERCEL"]},pr:"VERCEL_GIT_PULL_REQUEST_ID"},{name:"Visual Studio App Center",constant:"APPCENTER",env:"APPCENTER_BUILD_ID"},{name:"Woodpecker",constant:"WOODPECKER",env:{CI:"woodpecker"},pr:{CI_BUILD_EVENT:"pull_request"}},{name:"Xcode Cloud",constant:"XCODE_CLOUD",env:"CI_XCODE_PROJECT",pr:"CI_PULL_REQUEST_NUMBER"},{name:"Xcode Server",constant:"XCODE_SERVER",env:"XCS"}]});var W=w(_=>{"use strict";var M=B(),p=process.env;Object.defineProperty(_,"_vendors",{value:M.map(function(e){return e.constant})});_.name=null;_.isPR=null;_.id=null;M.forEach(function(e){let t=(Array.isArray(e.env)?e.env:[e.env]).every(function(i){return $(i)});_[e.constant]=t,t&&(_.name=e.name,_.isPR=J(e),_.id=e.constant)});_.isCI=!!(p.CI!=="false"&&(p.BUILD_ID||p.BUILD_NUMBER||p.CI||p.CI_APP_ID||p.CI_BUILD_ID||p.CI_BUILD_NUMBER||p.CI_NAME||p.CONTINUOUS_INTEGRATION||p.RUN_ID||_.name));function $(e){return typeof e=="string"?!!p[e]:"env"in e?p[e.env]&&p[e.env].includes(e.includes):"any"in e?e.any.some(function(n){return!!p[n]}):Object.keys(e).every(function(n){return p[n]===e[n]})}function J(e){switch(typeof e.pr){case"string":return!!p[e.pr];case"object":return"env"in e.pr?"any"in e.pr?e.pr.any.some(function(n){return p[e.pr.env]===n}):e.pr.env in p&&p[e.pr.env]!==e.pr.ne:"any"in e.pr?e.pr.any.some(function(n){return!!p[n]}):$(e.pr);default:return null}}});var te={};q(te,{default:()=>ne});var s=O("@yarnpkg/core"),C=O("@yarnpkg/fslib"),b=z(W());async function Z(e,n,t,{report:i,immutable:g,cache:U,persistProject:P}){try{let m=new Set,u=n.manifest;for(let f of["dependencies","devDependencies","peerDependencies"]){let o=u.getForScope(f);t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`Found ${o.size} ${f}`);for(let r of o.values()){let I=t.workspaces.find(d=>d.manifest.raw.name===r.name||d.manifest.raw.name===`@${r.scope}/${r.name}`);if(I){let d=s.structUtils.makeDescriptor(s.structUtils.makeIdent(r.scope||"",r.name),r.range);m.add(d),t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`Added workspace dependency: ${s.structUtils.stringifyDescriptor(d)}`);for(let E of["dependencies","devDependencies","peerDependencies"]){let c=I.manifest.getForScope(E);for(let l of c.values()){let a=s.structUtils.makeDescriptor(s.structUtils.makeIdent(l.scope||"npm",l.name),l.range);m.add(a),t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`Added transitive dependency from workspace: ${s.structUtils.stringifyDescriptor(a)}`)}}}else{let d=r.scope?`@${r.scope}/${r.name}`:r.name,E=s.structUtils.parseIdent(d),c=r.range.startsWith("workspace:")||r.range.startsWith("npm:")?r.range:`npm:${r.range}`,l=s.structUtils.makeDescriptor(E,c);m.add(l),t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`Added dependency: ${s.structUtils.stringifyDescriptor(l)}`)}}}let D=new Map,S=new Set,L=new Map,A=f=>{let o=s.structUtils.parseDescriptor(f);return o.range.startsWith("workspace:")?s.structUtils.stringifyDescriptor(o):s.structUtils.stringifyDescriptor(s.structUtils.makeDescriptor(o,`npm:${o.range.replace(/^npm:/,"")}`))},N=f=>{let o=s.structUtils.stringifyDescriptor(f),r=A(o);if(S.has(r))return;let I=t.storedResolutions.get(f.descriptorHash);if(!I){t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`No resolution found for ${o}`);return}L.has(I)||L.set(I,new Set),L.get(I).add(f);let d=t.storedPackages.get(I);if(!d){t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`No package found for ${o}`);return}S.add(r);for(let[E,c]of d.dependencies)N(c);for(let[E,c]of d.peerDependencies)N(c)};for(let f of m)N(f);for(let[f,o]of L){let r=t.storedPackages.get(f);if(!r)continue;let I=Array.from(o).map(l=>s.structUtils.stringifyDescriptor(l)).filter(l=>!l.includes("virtual:")).sort();if(I.length===0)continue;let d=I.join(", "),E=new Map,c=new Map;for(let[l,a]of r.dependencies){let R=a.range.startsWith("virtual:")?`npm:${a.range.replace(/^virtual:[^#]+#npm:/,"")}`:a.range.startsWith("workspace:")||a.range.startsWith("npm:")?a.range:`npm:${a.range}`;E.set(s.structUtils.stringifyIdent(a),R)}for(let[l,a]of r.peerDependencies){let R=s.structUtils.stringifyIdent(a),v=a.range.startsWith("virtual:")?`npm:${a.range.replace(/^virtual:[^#]+#npm:/,"")}`:a.range.startsWith("workspace:")||a.range.startsWith("npm:")?a.range:`npm:${a.range}`;if(R.startsWith("@types/")&&r.peerDependenciesMeta.get(R)?.optional&&a.range==="*"){t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`Skipping optional @types peer dependency: ${R}@${v}`);continue}c.set(R,v)}D.set(d,{version:r.linkType===s.LinkType.SOFT&&r.reference.startsWith("workspace:")?"0.0.0-use.local":r.version,resolution:s.structUtils.stringifyLocator(r),dependencies:E,peerDependencies:c,bin:r.bin,checksum:t.storedChecksums.get(f)||"",languageName:r.languageName,linkType:r.linkType})}t.configuration.get("enableVerboseLogging")&&i.reportInfo(s.MessageName.UNNAMED,`Generated ${D.size} entries for workspace lockfile`);let V=Array.from(D.entries()).sort().map(([f,o])=>{let r=o.dependencies.size>0?`  dependencies:
${Array.from(o.dependencies.entries()).sort().map(([E,c])=>{let l=c.startsWith("workspace:")?c:`npm:${c.replace(/^npm:/,"")}`;return`    ${E.startsWith("@")?`"${E}"`:E}: "${l}"`}).join(`
`)}`:"",I=o.peerDependencies.size>0?`  peerDependencies:
${Array.from(o.peerDependencies.entries()).sort().map(([E,c])=>{let l=c.startsWith("workspace:")?c:`${c.replace(/^npm:/,"")}`,a=l.match(/[:\{\}\[\]\,&*#?<>=!%@\\]/)?`"${l}"`:l;return`    ${E.startsWith("@")?`"${E}"`:E}: ${a}`}).join(`
`)}`:"";return[`"${f}":`,`  version: ${o.version||"unknown"}`,`  resolution: "${o.resolution}"`,r,I,o.bin.size>0?`  bin:
${Array.from(o.bin.entries()).map(([E,c])=>`    ${E}: ${c}`).join(`
`)}`:"",`  checksum: ${o.checksum}`,`  languageName: ${o.languageName.toLowerCase()}`,`  linkType: ${o.linkType.toLowerCase()}`].filter(Boolean).join(`
`)+`
`}).join(`
`),G=U.cacheKey,y=`# This file is generated by running "yarn install" inside your project through the workspace-lockfile plugin.
# Manual changes might be lost - proceed with caution!

__metadata:
  version: ${t.lockfileLastVersion??"6"}
  cacheKey: ${G}

${V}`,T=C.ppath.join(n.cwd,"yarn.workspace.lock");if(g){if(await C.xfs.readFilePromise(T,"utf-8")===y)return;i.reportError(s.MessageName.UNNAMED,`The lockfile ${T} would have been modified by this install, which is explicitly forbidden`)}else await C.xfs.writeFilePromise(T,y),i.reportInfo(s.MessageName.UNNAMED,`Created ${T}`)}catch(m){let u=m instanceof Error?m.message:String(m);i.reportError(s.MessageName.UNNAMED,`Failed to generate lockfile for ${e}: ${u}`)}}function j(e,n){if(n.persistProject!==!1)return{isWorkspaceFocused:!1,shouldContinue:!0};let t=process.argv.slice(2),i=t[0]==="workspaces"&&t[1]==="focus",g=i&&t.some(u=>u==="--production"),U=t.slice(2).filter(u=>!u.startsWith("-"));if(U.length===0){let u=C.ppath.cwd(),D=e.workspacesByCwd.get(u);if(!D)return{isWorkspaceFocused:!0,shouldContinue:!1};U.push(D.manifest.raw.name)}let P=new Set(U),m=new Set;for(let u of e.workspaces)if(P.has(u.manifest.raw.name)){m.add(u);for(let[D,S]of new Map([...u.manifest.getForScope("dependencies").entries(),...u.manifest.getForScope("devDependencies").entries()]))if(S.range.startsWith("workspace:")){let L=e.workspaces.find(A=>A.manifest.raw.name===S.name);L&&m.add(L)}}return{isWorkspaceFocused:i,shouldContinue:!g,workspaces:Array.from(m)}}var ee={configuration:{enableVerboseLogging:{description:"If true, enables verbose logging for workspace lockfile generation",type:s.SettingsType.BOOLEAN,default:!1}},hooks:{async afterAllInstalled(e,n){let t=j(e,n);t.shouldContinue&&(t.isWorkspaceFocused&&b.isCI&&(n.immutable=!0),await n.report.startTimerPromise("Workspace lockfiles step",async()=>{for(let i of t.workspaces??e.workspaces){let g=i.manifest.raw.name||i.cwd;await n.report.startTimerPromise(`Generating lockfile for ${g}`,async()=>{await Z(g,i,e,n)})}}))}}},ne=ee;return X(te);})();
return plugin;
}
};
